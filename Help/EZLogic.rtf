{\rtf1\ansi\ansicpg1252\uc1 \deff1\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f5\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica{\*\falt Arial};}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv{\*\falt Arial};}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f16\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Palatino{\*\falt Book Antiqua};}{\f97\froman\fcharset238\fprq2 Times New Roman CE;}
{\f98\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f100\froman\fcharset161\fprq2 Times New Roman Greek;}{\f101\froman\fcharset162\fprq2 Times New Roman Tur;}{\f102\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f103\fswiss\fcharset238\fprq2 Arial CE;}{\f104\fswiss\fcharset204\fprq2 Arial Cyr;}{\f106\fswiss\fcharset161\fprq2 Arial Greek;}{\f107\fswiss\fcharset162\fprq2 Arial Tur;}{\f108\fswiss\fcharset186\fprq2 Arial Baltic;}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\adjustright \f1\fs20 \snext0 Normal;}{\s1\sb240\nowidctlpar\adjustright \b\f9\fs20\ul \sbasedon0 \snext0 heading 1;}{
\s2\nowidctlpar\adjustright \b\f1 \sbasedon0 \snext0 heading 2;}{\s3\sb60\sa60\nowidctlpar\outlinelevel2\adjustright \b\f1\fs20 \sbasedon0 \snext0 heading 3;}{\s4\li360\nowidctlpar\adjustright \f1\ul \sbasedon0 \snext16 heading 4;}{
\s5\li720\nowidctlpar\adjustright \b\f1\fs20 \sbasedon0 \snext16 heading 5;}{\s6\li720\nowidctlpar\adjustright \f1\fs20\ul \sbasedon0 \snext16 heading 6;}{\s7\li720\nowidctlpar\adjustright \i\f1\fs20 \sbasedon0 \snext16 heading 7;}{
\s8\li720\nowidctlpar\adjustright \i\f1\fs20 \sbasedon0 \snext16 heading 8;}{\s9\li720\nowidctlpar\adjustright \i\f1\fs20 \sbasedon0 \snext16 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\sb120\sa120\nowidctlpar\adjustright \f1\fs20 
\sbasedon0 \snext15 body text;}{\s16\li720\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext16 Normal Indent;}{\*\cs17 \additive \super \sbasedon10 endnote reference;}{\s18\qj\li3600\ri720\nowidctlpar\tldot\tx8280\tqr\tx8640\adjustright \f1 
\sbasedon0 \snext0 \sautoupd toc 6;}{\s19\qj\li2880\nowidctlpar\tqr\tx9180\adjustright \f1 \sbasedon0 \snext0 \sautoupd toc 5;}{\s20\li2160\nowidctlpar\tqdec\tx9180\adjustright \f1 \sbasedon0 \snext0 \sautoupd toc 4;}{\s21\li1440\nowidctlpar
\tqdec\tx9180\adjustright \f1 \sbasedon22 \snext0 \sautoupd toc 3;}{\s22\qj\li720\nowidctlpar\tx720\tqdec\tx9180\adjustright \f1 \sbasedon23 \snext0 \sautoupd toc 2;}{\s23\qj\nowidctlpar\tqdec\tx9180\adjustright \f1 \sbasedon0 \snext0 \sautoupd toc 1;}{
\s24\li2160\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext0 \sautoupd index 7;}{\s25\li1800\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext0 \sautoupd index 6;}{\s26\li1440\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext0 \sautoupd index 5;}{
\s27\li1080\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext0 \sautoupd index 4;}{\s28\li720\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext0 \sautoupd index 3;}{\s29\li360\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext0 \sautoupd index 2;}{
\s30\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext0 \sautoupd index 1;}{\*\cs31 \additive \sbasedon10 line number;}{\s32\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext30 index heading;}{\s33\qj\nowidctlpar\brdrt\brdrs\brdrw15 
\tqc\tx4680\tqr\tx9360\adjustright \f1\fs18 \sbasedon0 \snext33 footer;}{\s34\qj\nowidctlpar\tqc\tx4320\tqr\tx8640\adjustright \f1 \sbasedon0 \snext0 header;}{\*\cs35 \additive \fs16\up6 \sbasedon10 footnote reference;}{\s36\nowidctlpar\adjustright 
\f1\fs20 \sbasedon0 \snext36 footnote text;}{\s37\fi-240\li480\sb80\nowidctlpar\tx480\adjustright \f5\fs20 \sbasedon0 \snext37 nscba;}{\s38\fi-240\li240\sa20\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext38 j;}{\s39\li480\sa20\nowidctlpar\adjustright 
\f5\fs20 \sbasedon0 \snext39 ij;}{\s40\sb80\sa20\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext40 btb;}{\s41\fi-240\li2400\sb20\sa20\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext41 ctcb;}{\s42\fi-240\li480\sa40\nowidctlpar\tx480\adjustright 
\f5\fs20 \sbasedon0 \snext42 ns;}{\s43\sa120\nowidctlpar\adjustright \f5\fs28 \sbasedon0 \snext43 TT;}{\s44\fi-240\li2400\sa20\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext44 crtj;}{\s45\fi-240\li480\nowidctlpar\tx480\adjustright \f5\fs20 
\sbasedon0 \snext45 nsca;}{\s46\sa20\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext46 bt;}{\s47\li240\sb120\sa40\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext47 Hf;}{\s48\li240\sb120\sa40\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext48 Hs;}{
\s49\li480\sb120\sa40\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext49 RT;}{\s50\fi-2160\li2160\sb240\sa80\nowidctlpar\tx2160\adjustright \f5\fs20 \sbasedon0 \snext50 c;}{\s51\li2160\sa20\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext51 ct;}{
\s52\li240\sa20\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext52 it;}{\s53\li480\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext53 nsct;}{\s54\fi-160\li400\sb80\sa40\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext54 nscb;}{
\s55\fi-2640\li2880\sb120\sa40\nowidctlpar\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880\adjustright \f5\fs20 \sbasedon0 \snext55 HC2;}{\s56\fi-2640\li2880\sb120\sa20\nowidctlpar\tx2880\adjustright \f5\fs20 \sbasedon0 \snext56 C2;}{
\s57\fi-240\li2400\sa20\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext57 ctc;}{\s58\li2160\sb160\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext58 crt;}{\s59\li480\sb20\sa40\nowidctlpar\adjustright \f5\fs20 \sbasedon0 \snext59 or;}{
\s60\fi-259\li360\sb40\sa40\nowidctlpar\tx360\adjustright \f11\fs20 \sbasedon0 \snext60 Ln1;}{\s61\li115\sb80\sa80\nowidctlpar\adjustright \f11\fs20 \sbasedon0 \snext0 *Intro;}{\s62\li115\sb80\sa80\keepn\nowidctlpar\adjustright \b\f11\fs20 
\sbasedon3 \snext61 *Title;}{\s63\fi-245\li360\sb80\nowidctlpar\adjustright \f11\fs20 \snext63 *Jl;}{\s64\li360\sb40\sa40\nowidctlpar\adjustright \f11\fs20 \snext0 Lp1;}{\s65\fi-1800\li1915\sb60\sl-240\slmult1\nowidctlpar\tx1915\adjustright \f11\fs20 
\sbasedon0 \snext65 Tph;}{\s66\li115\sb120\sa80\nowidctlpar\adjustright \b\f11\fs20 \snext60 Proch;}{\s67\fi-360\li720\sa120\nowidctlpar\adjustright \f1\fs20 \sbasedon0 \snext67 list text;}{\s68\li720\sb120\sa120\nowidctlpar\adjustright \f1\fs20 
\sbasedon15 \snext68 picture;}{\s69\li720\sb240\nowidctlpar\adjustright \i\f1\fs18 \sbasedon0 \snext69 picture caption;}{\s70\qj\nowidctlpar\adjustright \b\v\f1 \sbasedon0 \snext0 PostScript;}{\*\cs71 \additive \sbasedon10 page number;}{
\s72\nowidctlpar\adjustright \f9 \sbasedon0 \snext72 Normal + Helvetica;}{\s73\qr\ri7560\keepn\nowidctlpar\adjustright \b\i\f1 \sbasedon0 \snext0 Ref;}{\s74\qc\li2160\sb240\keepn\nowidctlpar\tqr\tx1620\adjustright \f1 \sbasedon0 \snext74 figure;}{
\s75\qc\li2160\sb240\sa120\nowidctlpar\adjustright \b\f1 \sbasedon0 \snext75 caption;}{\s76\qj\fi-1800\li1800\sb240\nowidctlpar\tqr\tx1260\adjustright \b\i\f1 \sbasedon0 \snext76 Notes;}{\s77\qj\li2160\sb240\nowidctlpar\adjustright \i\f1 
\sbasedon0 \snext77 Instructions;}{\s78\qr\li-720\nowidctlpar\adjustright \f1 \sbasedon0 \snext78 Oversize Figure;}{\s79\qr\sb240\sl480\slmult1\keepn\nowidctlpar\adjustright \f1 \sbasedon0 \snext0 Worksheet;}{\s80\qj\fi-2160\li2160\sb240\nowidctlpar
\tqr\tx1620\tx2520\adjustright \f1 \sbasedon0 \snext80 Example;}{\s81\qj\li2160\nowidctlpar\adjustright \b\i\f1 \sbasedon0 \snext0 Ref2;}{\s82\qc\keepn\nowidctlpar\adjustright \b\f1 \sbasedon0 \snext0 wk2cap;}{\s83\qc\li540\sb240\sl360\slmult1
\keep\nowidctlpar\tx2520\adjustright \b\f3 \sbasedon0 \snext0 wk1cap;}{\s84\qj\sl360\slmult1\nowidctlpar\adjustright \f16 \snext84 norm;}{\s85\qr\fi-2160\li2160\ri7740\nowidctlpar\adjustright \b\i\f1 \sbasedon0 \snext85 formula;}{
\s86\sb240\keepn\nowidctlpar\adjustright \i\f1\fs18 \sbasedon15 \snext86 figure caption;}{\s87\nowidctlpar\adjustright \f9\fs18 \sbasedon0 \snext87 Table Text;}{\s88\sb240\sa120\nowidctlpar\tx1800\adjustright \b\f1 \sbasedon15 \snext15 entry;}{\*\cs89 
\additive \ul\cf2 \sbasedon10 Hyperlink;}{\*\cs90 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}}{\*\listtable{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext
\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }
{\listname ;}\listid536969037}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid655496371}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid670643697
}{\list\listtemplateid67698703\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1265070822}
{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1899782617}
{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1913658125}}
{\*\listoverridetable{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360 }}
\ls1}{\listoverride\listid536969037\listoverridecount0\ls2}{\listoverride\listid1913658125\listoverridecount0\ls3}{\listoverride\listid1899782617\listoverridecount0\ls4}{\listoverride\listid1265070822\listoverridecount0\ls5}{\listoverride\listid670643697
\listoverridecount0\ls6}{\listoverride\listid655496371\listoverridecount0\ls7}}{\info{\title Easy Bridge Computer Logic Notes Help FIle}{\author Steven Han}{\operator Steven Han}{\creatim\yr1998\mo6\dy4\hr17\min13}{\revtim\yr1999\mo4\dy14\hr16\min19}
{\printim\yr1995\mo7\dy12\hr11\min14}{\version86}{\edmins107}{\nofpages6}{\nofwords1459}{\nofchars8319}{\*\company SteveSoft}{\nofcharsws0}{\vern89}}\margl1656\margr1224 
\widowctrl\ftnbj\aenddoc\noextrasprl\prcolbl\cvmme\sprsspbf\brkfrm\swpbdr\hyphcaps0\viewkind4\viewscale100 \fet0\sectd \pgnrestart\linex0\endnhere\titlepg\sectdefaultcl {\header \pard\plain \widctlpar\brdrb\brdrs\brdrw15 \tqr\tx9360\adjustright \f1\fs20 {
\fs24 Easy Bridge Help Files\tab File: EZLogic.doc
\par }\pard\plain \s34\qj\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \f1 {
\par }}{\footer \pard\plain \s33\widctlpar\tqc\tx4680\tqr\tx9360\adjustright \f1\fs18 {\i\fs14 \tab \tab }{\field{\*\fldinst {\cs71  PAGE }}{\fldrslt {\cs71\lang1024 6}}}{\i\fs14 
\par }}{\headerf \pard\plain \widctlpar\brdrb\brdrs\brdrw30 \tqr\tx9360\adjustright \f1\fs20 {\fs24 Easy Bridge Help Files\tab File: EZLogic.doc}{\b\i\fs24 
\par }}{\footerf \pard\plain \s33\widctlpar\tqc\tx4680\tqr\tx9360\adjustright \f1\fs18 {\i\fs14 
\par }\pard \s33\qj\widctlpar\brdrt\brdrs\brdrw15 \tqc\tx4680\tqr\tx9360\adjustright {Copyright 1997 by Steven S. Han}{\i\fs14 \tab \tab }{Page }{\field{\*\fldinst {\cs71\fs20  PAGE }}{\fldrslt {\cs71\fs20\lang1024 1}}}{
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 #{\footnote \pard\plain \s36\widctlpar\adjustright \f1\fs20 {
\cs35\fs16\up6 #}{ hidt_computer_logic_notes}}+{\footnote \pard\plain \s36\nowidctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 +}{ ComputerLogic: 0}}}{\b\fs24  Computer Logic Notes}{
\par 
\par }\pard \widctlpar\tx360\adjustright {\tab }{\uldb About Bridge Programs in General}{\v hidt_logic_bridge_programs}{\uldb 
\par }{\tab }{\uldb On the development of Easy Bridge}{\v hidt_logic_easyb_development}{\uldb 
\par }{\tab }{\uldb Double Dummy Solvers}{\v hidt_logic_double_dummy}{\uldb 
\par }{\tab }{\uldb What about Neural Networks?}{\v hidt_logic_neural_networks}{\uldb 
\par }\pard \widctlpar\adjustright {
\par }\pard\plain \s3\sb60\sa60\nowidctlpar\outlinelevel2\adjustright \b\f1\fs20 {\page }{\cs35\fs16\up6 #{\footnote \pard\plain \s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 #}{ hidt_logic_bridge_programs}}${\footnote \pard\plain 
\s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 $}{ Computer Logic Notes: About Bridge Programs in General}}K{\footnote \pard\plain \s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 K}{ bridge programs}}+{\footnote \pard\plain 
\s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 +}{ ComputerLogic: 10000}}}{ About Bridge Programs in General
\par }\pard\plain \nowidctlpar\adjustright \f1\fs20 {
\par Many of you probably already know a little something about Bridge programs, having played several of the ones available on the net.  And chances are, your opinion of them is not too favorable.  And your view is probably n
ot helped by the fact that many of these programs also }{\b\i cheat}{
, sometimes pretty blatantly.  That is, they peek at your cards and play suspiciously keen lines of attack or defense.  That kind of behavior would be considered a horrible offense on the part of 
a human player, but somehow it is seen as okay for computer programs, at least by some.
\par 
\par Easy Bridge, while it may not improve your opinion of Bridge programs in general, at least does }{\i not}{ cheat -- ever.  And as the clich\'e9 goes, you can take that to the bank.  And if you don\rquote t believe me, you can always view the }{\uldb 
Player Analyses Page}{\v dialog_status_analyses_page}{ using the }{\uldb Special menu}{\v menu_special}{.  The computer will explain there (though not always eloquently) the reasoning behind its actions.
\par 
\par }\pard\plain \s3\sb60\sa60\nowidctlpar\outlinelevel2\adjustright \b\f1\fs20 {\page }{\cs35\fs16\up6 #{\footnote \pard\plain \s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 #}{ hidt_logic_easyb_development}}${\footnote \pard\plain 
\s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 $}{ Computer Logic Notes: On the Development of Easy Bridge}}K{\footnote \pard\plain \s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 K}{ program development}}+{\footnote \pard\plain 
\s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 +}{ ComputerLogic: 20000}}}{ On the development of Easy Bridge
\par }\pard\plain \nowidctlpar\adjustright \f1\fs20 {
\par I began writing Easy Bridge in my spare time back in the summer of 1995.  While I had enjoyed pl
aying bridge back in my college days, I found that in the outside world it was difficult to find other young players my age (30-something).  So I found some computer bridge programs on the net and tried them out.
\par 
\par However, I was disappointed to find that these programs were generally not of a high quality, whether in terms of playing ability or visual presentation.  Things have improved somewhat since then, but there are still not many 
programs that provide much of a challenge }{even}{ to a novice player like myself.  So my goal in setting out back then was to develop an easy to use program that would provide at least a modicum of intelligent play.
\par 
\par However, since the start of the project, I have found there\rquote s a good reason why most of the current bridge programs don\rquote t play very well.  It\rquote s because programming the logic necessary for decent play is exceedingly difficult!!!
\par 
\par You see, without getting into an extended discussion of artificial intelligence (which I\rquote m not qualified to do anyway), the problem is si
mple.  We humans make actions (such as playing cards in bridge) based on a vast set of implicit and explicit rules we accumulate from the experience of playing many games over time.  If you were to ask an expert player how he makes certain bids or plays, 
he would probably give you a modest set of general rules along with countless exceptions (e.g., \ldblquote Never throw a King under an Ace, }{\i unless}{\'85\rdblquote ).
\par 
\par But fact is, there are also many more }{\i implicit}{ rules that these players are using, which they don\rquote t (or can\rquote t) always make explicit.  These rules are based on lessons learned over many years of experience, and are so deeply buried in 
the brain that they are nearly impossible to extract and express in plain English.  This set of collective knowledge is commonly referred to as \ldblquote judgment\rdblquote , which is vague enough to make any computer programmer wince.
\par 
\par So the problem comes down to translating complex, murky, and often perplexing human rules into a computer language and embedding them into a program.  Much general work has bee
n done in this field, known as expert systems, and some positive results have been obtained.  Work has also been done in related areas such as }{\uldb neural networks}{\v hidt_logic_neural_networks}{ and fuzzy logic, also with some success.
\par 
\par However, it seems that the game of Bridge has never been quite lucrative (or sexy) enough to attract much serious work from }{AI}{ researchers.  Further exacerbating this situation is the frequent assertion that Bridge is a particularly intrac
table problem to solve using traditional AI techniques.  This argument sounds particularly convincing when you compare Bridge to chess.
\par 
\par Chess, although it may seem like a complex game to beginners, is actually fairly straightforward from a computer\rquote s perspective.  This is because chess is a game of complete information; i.e., all of the game\rquote s state information 
is represented in the pieces, whose positions are always known.  Therefore computer researchers can simply throw hardware at the problem, relying on powerful systems like Deep Blue to churn through hundreds of millions of possible moves per second.
\par 
\par Bridge on the other hand is a game of limited information, since only the cards in your own hand are visible (plus dummy\rquote s cards after the opening lead).  Henc
e, the location of at least half the outstanding cards are unknown to the player at any given time.  This means that examining all of the possible outcomes at each stage of play is largely unfeasible, as the number of possibili
ties becomes truly astronomical.  In fact, the combinatorics of the problem are likely to defy a brute force approach on even the fastest computers well into the foreseeable future.
\par 
\par The result of this dilemma is that Bridge has so far withstood assaults from traditional AI techniques, although other approaches have become popular, such as the }{\uldb double dummy sampling technique}{\v hidt_logic_double_dummy}{
 advocated by Matt Ginsburg.
\par 
\par For its part, Easy Bridge does not make any attempt to revolutionize the field of Bridge AI.  Rather, its goal is simply to mimic basic human behavior, both during bidding and card play. 
\par 
\par The bidding logic in Easy Bridge is fairly simple.  It is based on an almost verbatim replay of 
rules given in numerous bidding texts, of which there are many.  Hence it turns out that implementing the bidding module was straightforward, if somewhat tedious.  I implemented most of the conventions found in the Standard American System, while leav
ing out some of the lesser used ones (such as Gerber) for a later iteration.
\par 
\par As for the playing logic, it was developed to emulate a human player (namely myself) to the closest extent reasonable.  If you follow the computer player\rquote s notes in the Analysis and Status windows, you\rquote 
ll see how the declarer goes through an initial planning stage and makes a reasonable effort to carry it out, making adjustments along the way as it sees cards being played.  And when the computer plays as a defender, its logic is e
ven less complicated, resorting to simple rules of defense (fancifully called }{\i heuristics}{ in the AI lingo).
\par }\pard\plain \s30\nowidctlpar\adjustright \f1\fs20 {
\par }\pard\plain \nowidctlpar\adjustright \f1\fs20 {For a more detailed discussion of the rules the program uses in bidding and cardplay, check out the section on }{\uldb Computer Play Strategy}{\v hidt_computer_strategy}{.
\par 
\par I hope to improve the player logic in future versions of Easy Bridge.  What specific path the development will follow is uncertain, but most likely I will continue to use a combination of simple planning and heuristics for the foreseeable future
.  Stay tuned to this channel for further developments.
\par 
\par }\pard\plain \s3\sb60\sa60\nowidctlpar\outlinelevel2\adjustright \b\f1\fs20 {\page }{\cs35\fs16\up6 #{\footnote \pard\plain \s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 #}{ hidt_logic_double_dummy}}${\footnote \pard\plain 
\s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 $}{ Computer Logic Notes: Double Dummy}}K{\footnote \pard\plain \s36\nowidctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 K}{ double dummy}}+{\footnote \pard\plain \s36\widctlpar\adjustright \f1\fs20 {
\cs35\fs16\up6 +}{ ComputerLogic: 30000}}}{ Double-Dummy Solvers
\par }\pard\plain \s30\nowidctlpar\adjustright \f1\fs20 {
\par }\pard\plain \nowidctlpar\adjustright \f1\fs20 {Lately, a new line of AI attack on the game of bridge has become popular, that of the double-dummy solver.  In case you\rquote 
re not familiar with the concept, double dummy is a mode of play where all four hands are made visible and the declarer determine the line(s) of play that will let him fulfill the contract, assuming best po
ssible defense from the opponents.  This problem is computationally much easier to tackle than straight bridge, since all of the card positions are known from the outset.
\par 
\par Of course, the problem here is that }{\b\i double dummy is not bridge}{.  You could implement a double dummy solver to play the declarer in a bridge program, but then it would need to see all the players\rquote 
 cards, and that would mean cheating.  Besides, what\rquote s the point in trying to defend against a computer player if it\rquote s already figured out a guaranteed winning line of play?
\par 
\par For this reason, some have advocated using a fast double-dummy solver to evaluate a random sampling of double dummy hands to 
find the best (probabilistic) line of play for single dummy.  The distributions of hands would presumably reflect any information gained during bidding.  }{\uldb Matt Ginsburg}{\v hidg_ginsburg}{
 wrote an excellent seminal paper on this topic, which can be found (in postscript form only, alas) at }{\field{\*\fldinst { HYPERLINK http://www.dai.ed.ac.uk/students/ianf/Research/Papers/ginsberg.ps }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000004200000068007400740070003a002f002f007700770077002e006400610069002e00650064002e00610063002e0075006b002f00730074007500640065006e00740073002f00690061006e0066002f00520065007300650061007200630068002f0050006100
70006500720073002f00670069006e00730062006500720067002e00700073000000e0c9ea79f9bace118c8200aa004ba90b8400000068007400740070003a002f002f007700770077002e006400610069002e00650064002e00610063002e0075006b002f00730074007500640065006e00740073002f00690061006e0066
002f00520065007300650061007200630068002f005000610070006500720073002f00670069006e00730062006500720067002e00700073000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs89\ul\cf2 
http://www.dai.ed.ac.uk/students/ianf{\*\bkmkstart _Hlt400263161}/{\*\bkmkend _Hlt400263161}Research/Papers/ginsberg.ps}}}{\v !ExecFile(\ldblquote }{\field\flddirty{\*\fldinst {\v  HYPERLINK http://www.dai.ed.ac.uk/students/ianf/Research/Pa
pers/ginsberg.ps }{\v {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000004200000068007400740070003a002f002f007700770077002e006400610069002e00650064002e00610063002e0075006b002f00730074007500640065006e00740073002f00690061006e0066002f00520065007300650061007200630068002f0050006100
70006500720073002f00670069006e00730062006500720067002e00700073000000e0c9ea79f9bace118c8200aa004ba90b8400000068007400740070003a002f002f007700770077002e006400610069002e00650064002e00610063002e0075006b002f00730074007500640065006e00740073002f00690061006e0066
002f00520065007300650061007200630068002f005000610070006500720073002f00670069006e00730062006500720067002e00700073000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs89\v\cf2 
http://www.dai.ed.ac.uk/students/ianf/Research/Papers/ginsberg.ps}}}{\v \rdblquote , \ldblquote \rdblquote ,SW_SHOWNORMAL)}{. 
\par 
\par Since the time of that paper, Matt Ginsburg has gone on to implement the ideas in a double dummy solver  (GIB, or \ldblquote Ginsburg\rquote s Intelligent Bridgeplayer\rdblquote , nee \ldblquote Goren In a Box\rdblquote 
) that can play single dummy using the double dummy sampling technique.}{\v !ExecFile(\ldblquote }{\field\flddirty{\*\fldinst {\v  HYPERLINK http://www.cirl.uoregon.edu/~ginsberg/bridge.html }{\v {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000003200000068007400740070003a002f002f007700770077002e006300690072006c002e0075006f007200650067006f006e002e006500640075002f007e00670069006e00730062006500720067002f006200720069006400670065002e00680074006d006c00
0000e0c9ea79f9bace118c8200aa004ba90b6400000068007400740070003a002f002f007700770077002e006300690072006c002e0075006f007200650067006f006e002e006500640075002f007e00670069006e00730062006500720067002f006200720069006400670065002e00680074006d006c0000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000}}}{\fldrslt {\cs89\v\cf2 http://www.cirl.uoregon.edu/~ginsberg/bridge.html}}}{\v \rdblquote , \ldblquote \rdblquote ,SW_SHOWNORMAL)}{
\par 
\par As of 1999, Matt Ginsberg has extended GIB to perform bidding and is continuing to refine the double dummy engine.  He reports that he has fielded GIB successfully against Bridge Baron\'99
, a popular commercial bridge program, and it appears now that GIB will likely be the one to beat when it comes to Bridge AI.  If you\rquote re curious, GIB can now be found playing on }{\ul OKBridge}{\v hidg_okbridge}{, 
\par 
\par In October of 1998, a commercial version of GIB with a Java user interface was released.  See the GIBware page, }{\field{\*\fldinst { HYPERLINK http://www.gibware.com }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001700000068007400740070003a002f002f007700770077002e0067006900620077006100720065002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b3000000068007400740070003a002f002f007700770077002e0067006900620077006100
720065002e0063006f006d002f00000000000000000000000000000000000000}}}{\fldrslt {\cs89\ul\cf2 http://w{\*\bkmkstart _Hlt423921393}w{\*\bkmkend _Hlt423921393}w.gibware.com}}}{\v !ExecFile(\ldblquote }{\field\flddirty{\*\fldinst {\v 
 HYPERLINK http://www.gibware.com }{\v {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001700000068007400740070003a002f002f007700770077002e0067006900620077006100720065002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b3000000068007400740070003a002f002f007700770077002e0067006900620077006100
720065002e0063006f006d002f00000000000000000000000000000000000000}}}{\fldrslt {\cs89\v\cf2 http://www.gibware.com}}}{\v \rdblquote , \ldblquote \rdblquote ,SW_SHOWNORMAL)}{
, for details.  It should be interesting to see how GIB influences the field of Bridge software in the future.
\par }\pard\plain \s30\nowidctlpar\adjustright \f1\fs20 {
\par }\pard\plain \nowidctlpar\adjustright \f1\fs20 {If you look hard enough, you can still find an early freeware version of GIB (circa 1997) on the net.  And if you wish, you can use this version as the card play engine for Easy Bridge.  See the section on }
{\uldb Using GIB with Easy Bridge}{\v hidt_using_gib}{ for details.
\par }\pard\plain \s3\sb60\sa60\nowidctlpar\outlinelevel2\adjustright \b\f1\fs20 {\page }{\cs35\fs16\up6 #{\footnote \pard\plain \s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 #}{ hidt_logic_neural_networks}}${\footnote \pard\plain 
\s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 $}{ Computer Logic Notes: Neural Networks}}K{\footnote \pard\plain \s36\nowidctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 K}{ neural networks; neural networks, details}}+{\footnote \pard\plain 
\s36\widctlpar\adjustright \f1\fs20 {\cs35\fs16\up6 +}{ ComputerLogic: 40000}}}{ What about Neural Networks?
\par }\pard\plain \nowidctlpar\adjustright \f1\fs20 {
\par On the surface of things, a neural network might appear to be the perfect solution to Bridge AI requirements.  
\par 
\par If you are not familiar with the concept of a neural network, it is a system designed to mimic the way the human brain operates. Basically, just as the human brain consists of many layers of interconnected neurons, a ne
ural net consists of layers of interconnected \ldblquote nodes\rdblquote .  The connections between the nodes have numeric weights assigned to them, and the weights can in theory embed simple 
mathematical rules and provide the basis for pattern recognition.  Hence, when a certain pa
ttern is input (such as a bridge hand), the information propagates through the net and an answer (a bid) is output based on the rules implied in the interconnections. The web site below has a much better explanation of this process than I can provide here
.
\par 
\par \tab }{\field\fldedit{\*\fldinst { HYPERLINK http://www.okbridge.com }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001800000068007400740070003a002f002f007700770077002e006f006b006200720069006400670065002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b3200000068007400740070003a002f002f007700770077002e006f006b0062007200
69006400670065002e0063006f006d002f0000000000000000000000000000}}}{\fldrslt {\ul\cf2 http://accpc.com/nnfaq/FAQ.html}}}{\v !ExecFile(\ldblquote }{\field\fldedit{\*\fldinst {\v  HYPERLINK http://www.okbridge.com }{\v {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001800000068007400740070003a002f002f007700770077002e006f006b006200720069006400670065002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b3200000068007400740070003a002f002f007700770077002e006f006b0062007200
69006400670065002e0063006f006d002f0000000000000000000000000000}}}{\fldrslt {\v\cf2 http://accpc.com/nnfaq/FAQ.html}}}{\v \rdblquote , \ldblquote \rdblquote ,SW_SHOWNORMAL)}{
\par }\pard\plain \s30\nowidctlpar\adjustright \f1\fs20 {
\par }\pard\plain \nowidctlpar\adjustright \f1\fs20 {Unfortunately however, as is often the case in real life, the technology does not always live up to the hype.  I hooked up a standard BPN (Backward Propagation Network) neural net 
implementation to the Easy Bridge bidding engine, and let the setup run for a while to train the neural net. I then ran the net on its own and compared its output again
st the standard bidding engine.  The results were somewhat less than impressive.  In fact, they were downright awful.
\par 
\par So what was the problem?  Well, basically, neural nets are fine for continuous domain problems where approximate answers are acceptable.  Some examples of such problems would be predicting annual rainfall amounts, projection of GNP, etc.  Suc
h problems have answers that lay on a continuous range of values, and some variation between results is tolerable.  For instance, a prediction of 22 inches 
of rain is not much different than 21, and a GNP projection of 3.5% is not substantially different from 3.3%.
\par 
\par Bridge bidding, however, requires discrete (vs. continuous) answers and is not tolerant of approximations.  A bid of 4 Spade is not \ldblquote approximately the same\rdblquote 
 as 4 No Trump.  Bids need to be exact and precise, and a close answer just doesn\rquote t cut it. Hence, traditional neural nets are not well suited to such a problem domain.
\par 
\par So then you might ask, why are human brains so much better at bidding, when they operate on basically the same principle as neural nets?  Well, the short answer is that the human brain is much more complex than the greatly 
simplified model presented here.  For instance, it contains hundreds of billions of neurons, whereas most neural net implementations may 
have a couple of hundred nodes or less. There may also be other factors involved, such as the inter-neuron connections being non-linear, or perhaps incorporating other techniques we do not yet understand.  We will have to wait and see whether more advance
d neural net implementations can better simulate the human brain in the future.
\par 
\par }}